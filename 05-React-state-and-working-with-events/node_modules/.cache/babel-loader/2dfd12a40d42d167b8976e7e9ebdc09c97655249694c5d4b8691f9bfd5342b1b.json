{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\WebDev\\\\React\\\\05-React-state-and-working-with-events\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Card from \"../UI/card\";\nimport ExpenseFilter from \"./ExpenseFIlter\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./Expenses.css\";\n// import ExpensesList from \"./ExpensesList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Expenses(props) {\n  _s();\n  const [filteredYear, setFilteredYear] = useState(\"All\");\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n  const filteredExpenses = props.items.filter(expense => {\n    if (filteredYear === \"All\") {\n      return expense;\n    }\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"noExpenseContent\",\n    children: \"No expenses found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 25\n  }, this);\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map(expense => {\n      return /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: expense.title,\n        amount: expense.amount,\n        date: expense.date\n      }, expense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n      selected: filteredYear,\n      onChangeFilter: filterChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), expensesContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Expenses, \"PGn17XP2PftNZJhQR0iziugap6M=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","Card","ExpenseFilter","ExpenseItem","jsxDEV","_jsxDEV","Expenses","props","_s","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","items","filter","expense","date","getFullYear","toString","expensesContent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","title","amount","id","selected","onChangeFilter","_c","$RefreshReg$"],"sources":["D:/Project/WebDev/React/05-React-state-and-working-with-events/src/components/Expenses/Expenses.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport Card from \"../UI/card\";\r\nimport ExpenseFilter from \"./ExpenseFIlter\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./Expenses.css\";\r\n// import ExpensesList from \"./ExpensesList\";\r\n\r\nfunction Expenses(props) {\r\n  const [filteredYear, setFilteredYear] = useState(\"All\");\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    if (filteredYear === \"All\") {\r\n      return expense;\r\n    }\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  let expensesContent = <p className=\"noExpenseContent\">No expenses found.</p>;\r\n\r\n  if (filteredExpenses.length > 0) {\r\n    expensesContent = filteredExpenses.map((expense) => {\r\n      return (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpenseFilter\r\n        selected={filteredYear}\r\n        onChangeFilter={filterChangeHandler}\r\n      />\r\n      {expensesContent}\r\n      {/* {filteredExpenses.length === 0 && <p>No expenses found.</p>} */}\r\n      {/* {filteredExpenses.length > 0 &&\r\n        filteredExpenses.map((expense) => {\r\n          return (\r\n            <ExpenseItem\r\n              key={expense.id}\r\n              title={expense.title}\r\n              amount={expense.amount}\r\n              date={expense.date}\r\n            />\r\n          );\r\n        })} */}\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,gBAAgB;AACvB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACvB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAMW,mBAAmB,GAAIC,YAAY,IAAK;IAC5CF,eAAe,CAACE,YAAY,CAAC;EAC/B,CAAC;EACD,MAAMC,gBAAgB,GAAGN,KAAK,CAACO,KAAK,CAACC,MAAM,CAAEC,OAAO,IAAK;IACvD,IAAIP,YAAY,KAAK,KAAK,EAAE;MAC1B,OAAOO,OAAO;IAChB;IACA,OAAOA,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,KAAKV,YAAY;EAC/D,CAAC,CAAC;EAEF,IAAIW,eAAe,gBAAGf,OAAA;IAAGgB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,EAAC;EAAkB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAE5E,IAAIb,gBAAgB,CAACc,MAAM,GAAG,CAAC,EAAE;IAC/BP,eAAe,GAAGP,gBAAgB,CAACe,GAAG,CAAEZ,OAAO,IAAK;MAClD,oBACEX,OAAA,CAACF,WAAW;QAEV0B,KAAK,EAAEb,OAAO,CAACa,KAAM;QACrBC,MAAM,EAAEd,OAAO,CAACc,MAAO;QACvBb,IAAI,EAAED,OAAO,CAACC;MAAK,GAHdD,OAAO,CAACe,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIhB,CAAC;IAEN,CAAC,CAAC;EACJ;EAEA,oBACErB,OAAA,CAACJ,IAAI;IAACoB,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACxBjB,OAAA,CAACH,aAAa;MACZ8B,QAAQ,EAAEvB,YAAa;MACvBwB,cAAc,EAAEtB;IAAoB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,EACDN,eAAe;EAAA;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAaZ,CAAC;AAEX;AAAClB,EAAA,CAhDQF,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAkDjB,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}